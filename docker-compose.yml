version: '3'
services:

  db:
    image: postgres:13
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB: movies_dbs
    networks:
      - yandex_practicum
  
  migration:
    build: ./app
    image: movies_image
    command: python manage.py migrate --noinput
    volumes:
      - migration_volume:/opt/app/migrations
    depends_on:
      - db
    networks:
      - yandex_practicum

  service:
    image: movies_image
    depends_on:
      - db
      - migration
    env_file:
      - ./app/.env
    volumes:
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    extra_hosts:
      - "localhost:127.0.0.1"
    expose:
      - 8000
    networks:
      - yandex_practicum
    
  etl:
    build: ./etl
    image: etl
    depends_on:
      - db
      - migration
      - service
    env_file:
      - ./etl/.env
    volumes:
      - etl_volume:/opt/etl
    expose:
      - 80
    network_mode: "host"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - static_volume:/opt/app/static
      - media_volume:/opt/app/media
    depends_on:
      - service
    ports:
      - "80:80"
    networks:
      - yandex_practicum

  swagger-ui:
   image: swaggerapi/swagger-ui
   container_name: swagger_ui_container
   ports:
      - "8080:8080"
   volumes:
      - ./api_docs:/usr/share/nginx/html/doc
   environment:
      API_URL: doc/openapi.yaml
   networks:
      - yandex_practicum

volumes:
  postgres_data:
  static_volume:
  media_volume:
  migration_volume:
  etl_volume:
networks:
  yandex_practicum:
